<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2rayclashx.github.io/news/article-101246.htm" />
    <meta charset="utf-8">
    <title>Python调用C++程序的几种方法</title>
        <meta name="description" content="大家都知道Python的优点是开发效率高，使用方便，C++则是运行效率高，这两者可以相辅相成，不管是在Python项目中嵌入C++代码，或是在C++项目中用Python实现外围功能，都可能遇到Pyth" />
        <link rel="icon" href="/assets/website/img/v2rayclashx/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2ray ClashX机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2rayclashx.github.io/news/article-101246.htm" />
    <meta property="og:site_name" content="V2ray ClashX机场节点订阅官网" />
    <meta property="og:title" content="Python调用C++程序的几种方法" />
    <meta property="og:image" content="https://v2rayclashx.github.io/uploads/20240906/c4ecf9c22f4311a8d4f6773247ce7172.webp" />
        <meta property="og:release_date" content="2025-04-22T08:21:34" />
    <meta property="og:updated_time" content="2025-04-22T08:21:34" />
        <meta property="og:description" content="大家都知道Python的优点是开发效率高，使用方便，C++则是运行效率高，这两者可以相辅相成，不管是在Python项目中嵌入C++代码，或是在C++项目中用Python实现外围功能，都可能遇到Pyth" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Python调用C++程序的几种方法">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- mobile responsive meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!-- ** Plugins Needed for the Project ** -->
    <!-- Bootstrap -->
    <link rel="stylesheet" href="/assets/website/js/frontend/v2rayclashx/bootstrap/bootstrap.min.css">
    <!-- themefy-icon -->
    <link rel="stylesheet" href="/assets/website/js/frontend/v2rayclashx/themify-icons/themify-icons.css">
    <!-- slick slider -->
    <link rel="stylesheet" href="/assets/website/js/frontend/v2rayclashx/slick/slick.css">
    <!-- venobox popup -->
    <link rel="stylesheet" href="/assets/website/js/frontend/v2rayclashx/Venobox/venobox.css">
    <!-- aos -->
    <link rel="stylesheet" href="/assets/website/js/frontend/v2rayclashx/aos/aos.css">
    <!-- Main Stylesheet -->
    <link href="/assets/website/css/v2rayclashx/style.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-YZ6HC6HRBC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-YZ6HC6HRBC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- navigation -->
    <section class="fixed-top navigation">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-light">
                <a class="navbar-brand" href="/">
                                <span>V2ray ClashX</span>
                                </a>
                <button class="navbar-toggler border-0" type="button" data-toggle="collapse" data-target="#navbar" aria-controls="navbar" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <!-- navbar -->
                <div class="collapse navbar-collapse text-center" id="navbar">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
            </nav>
        </div>
    </section>
    <!-- /navigation -->
    <!-- about us -->
    <section class="section-lg about pb-0">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <h2 class="section-title">Python调用C++程序的几种方法</h2>
                </div>
                <div class="col-lg-12 mb-100">
                    <p>
                      <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                    </p>
                </div>
            </div>
        </div>
        <!-- background shapes -->
        <img src="/assets/website/img/v2rayclashx/background-shape/green-dot.png" alt="background-shape" class="about-bg-1 up-down-animation">
        <img src="/assets/website/img/v2rayclashx/background-shape/blue-dot.png" alt="background-shape" class="about-bg-2 left-right-animation">
        <img src="/assets/website/img/v2rayclashx/background-shape/green-half-cycle.png" alt="background-shape" class="about-bg-3 up-down-animation">
        <img src="/assets/website/img/v2rayclashx/background-shape/seo-ball-1.png" alt="background-shape" class="about-bg-4 left-right-animation">
        <img src="/assets/website/img/v2rayclashx/background-shape/team-bg-triangle.png" alt="background-shape" class="about-bg-5 up-down-animation">
        <img src="/assets/website/img/v2rayclashx/background-shape/service-half-cycle.png" alt="background-shape" class="about-bg-6 left-right-animation">
    </section>
    <!-- /about us -->
    <!-- feature -->
    <section class="section feature mb-0" id="feature">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail">
                      				  				  				<div id="content_views" class="htmledit_views"> </h1> <p>大家都知道Python的优点是开发效率高，使用方便，C++则是运行效率高，这两者可以相辅相成，不管是在Python项目中嵌入C++代码，或是在C++项目中用Python实现外围功能，都可能遇到Python调用C++模块的需求，下面列举出集中c++代码导出成Python接口的几种基本方法，一起来学习学习吧。</p> </h1> <p>Python解释器就是用C实现，因此只要我们的C++的数据结构能让Python认识，理论上就是可以被直接调用的。我们实现test1.cpp如下</p> <pre class="has"><code class="language-cpp">#include &lt;Python.h&gt;     int Add(int x, int y)  {      return x + y;  }     int Del(int x, int y)  {      return x - y;  }     PyObject* WrappAdd(PyObject* self, PyObject* args)  {      int x, y;      if (!PyArg_ParseTuple(args, "ii", &amp;x, &amp;y))      {          return NULL;      }      return Py_BuildValue("i", Add(x, y));  }     PyObject* WrappDel(PyObject* self, PyObject* args)  {      int x, y;      if (!PyArg_ParseTuple(args, "ii", &amp;x, &amp;y))      {          return NULL;      }      return Py_BuildValue("i", Del(x, y));  }   static PyMethodDef test_methods[] = {      {"Add", WrappAdd, METH_VARARGS, "something"},      {"Del", WrappDel, METH_VARARGS, "something"},      {NULL, NULL}  };     extern "C" void inittest1()  {      Py_InitModule("test1", test_methods);     } </code></pre> <p>编译命令如下</p> <pre class="has"><code>g++ -fPIC -shared test1.cpp -I/usr/include/python2.7 -o test1.so  </code></pre> <blockquote> <p>-fPIC：生成位置无关目标代码，适用于动态连接；<br /> -L path：表示在path目录中搜索库文件，如-L.表示在当前目录；<br /> -I path：表示在path目录中搜索头文件；<br /> -o file：制定输出文件为file；<br /> -shared：生成一个共享库文件；</p> </blockquote> <p>&nbsp;运行Python解释器，测试如下</p> <pre class="has"><code>&gt;&gt;&gt; import test1  &gt;&gt;&gt; test1.Add(1,2)  3  </code></pre> <p><strong>这里要注意一下几点</strong></p> <ol> <li>如果生成的动态库名字为test1，则源文件里必须有inittest1这个函数，且Py_InitModule的第一个参数必须是“test1”，否则Python导入模块会失败</li> <li>如果是cpp源文件，inittest1函数必须用extern "C"修饰，如果是c源文件，则不需要。原因是Python解释器在导入库时会寻找initxxx这样的函数，而C和C++对函数符号的编码方式不同，C++在对函数符号进行编码时会考虑函数长度和参数类型，具体可以通过<code>nm test1.so</code>查看函数符号，c++filt工具可通过符号反解出函数原型</li> </ol> </h1> <p>我们使用和上面同样的例子，实现test2.cpp如下</p> <pre class="has"><code class="language-cpp">#include &lt;boost/python/module.hpp&gt;  #include &lt;boost/python/def.hpp&gt;  using namespace boost::python;     int Add(const int x, const int y)  {      return x + y;  }     int Del(const int x, const int y)  {      return x - y;  }     BOOST_PYTHON_MODULE(test2)  {      def("Add", Add);      def("Del", Del);  } </code></pre> <p>其中BOOST_PYTHON_MODULE的参数为要导出的模块名字，编译命令如下</p> <pre class="has"><code>g++ test2.cpp -fPIC -shared -o test2.so -I/usr/include/python2.7 -I/usr/local/include -L/usr/local/lib -lboost_python  </code></pre> <p><strong>注意：</strong> 编译时需要指定boost头文件和库的路径，我这里分别是/usr/local/include和/usr/local/lib</p> <p>或者通过setup.py导出模块</p> <pre class="has"><code class="language-python">#!/usr/bin/env python  from distutils.core import setup  from distutils.extension import Extension     setup(name="PackageName",   ext_modules=[    Extension("test2", ["test2.cpp"],    libraries = ["boost_python"])   ]) </code></pre> <p>Extension的第一个参数为模块名，第二个参数为文件名</p> <p>执行如下命令</p> <pre class="has"><code>python setup.py build  </code></pre> <p>这时会生成build目录，找到里面的test2.so，并进入同一级目录，验证如下</p> <pre class="has"><code>&gt;&gt;&gt; import test2  &gt;&gt;&gt; test2.Add(1,2)  3 &gt;&gt;&gt; test2.Del(1,2)  -1  </code></pre> </h1> <p>test3.cpp实现如下</p> <pre class="has"><code class="language-cpp">#include &lt;boost/python.hpp&gt;  using namespace boost::python;     class Test  {      public:          int Add(const int x, const int y)          {              return x + y;          }           int Del(const int x, const int y)          {              return x - y;          }  };     BOOST_PYTHON_MODULE(test3)  {      class_&lt;Test&gt;("Test")          .def("Add", &amp;Test::Add)          .def("Del", &amp;Test::Del);  } </code></pre> <p><strong>注意：</strong>BOOST_PYTHON_MODULE里的.def使用方法有点类似Python的语法，等同于</p> <pre class="has"><code>class_&lt;Test&gt;("Test").def("Add", &amp;Test::Add);  class_&lt;Test&gt;("Test").def("Del", &amp;Test::Del);  </code></pre> <p>编译命令如下</p> <pre class="has"><code>g++ test3.cpp -fPIC -shared -o test3.so -I/usr/include/python2.7 -I/usr/local/include/boost -L/usr/local/lib -lboost_python  </code></pre> <p>测试如下</p> <pre class="has"><code>&gt;&gt;&gt; import test3  &gt;&gt;&gt; test = test3.Test()  &gt;&gt;&gt; test.Add(1,2)  3 &gt;&gt;&gt; test.Del(1,2)  -1  </code></pre> </h1> <p>test4.cpp实现如下</p> <pre class="has"><code class="language-cpp">#include &lt;boost/python.hpp&gt;  using namespace boost::python;     class Test  {      public:          int Add(const int x, const int y, const int z = 100)          {          return x + y + z;          }  };     int Del(const int x, const int y, const int z = 100)  {      return x - y - z;  }     BOOST_PYTHON_MEMBER_FUNCTION_OVERLOADS(Add_member_overloads, Add, 2, 3)  BOOST_PYTHON_FUNCTION_OVERLOADS(Del_overloads, Del, 2, 3)     BOOST_PYTHON_MODULE(test4)  {      class_&lt;Test&gt;("Test")          .def("Add", &amp;Test::Add, Add_member_overloads(args("x", "y", "z"), "something"));      def("Del", Del, Del_overloads(args("x", "y", "z"), "something"));      } </code></pre> <p>这里Add和Del函数均采用了默认参数，Del为普通函数，Add为类成员函数，这里分别调用了不同的宏，宏的最后两个参数分别代表函数的最少参数个数和最多参数个数</p> <p>编译命令如下</p> <pre class="has"><code>g++ test4.cpp -fPIC -shared -o test4.so -I/usr/include/python2.7 -I/usr/local/include/boost -L/usr/local/lib -lboost_python  </code></pre> <p>测试如下</p> <pre class="has"><code>&gt;&gt;&gt; import test4  &gt;&gt;&gt; test = test4.Test()  &gt;&gt;&gt; print test.Add(1,2)  103 &gt;&gt;&gt; print test.Add(1,2,z=3)  6 &gt;&gt;&gt; print test4.Del(1,2)  -1 &gt;&gt;&gt; print test4.Del(1,2,z=3)  -1 </code></pre> </h1> <p>既然是导出为Python接口，调用者难免会使用Python特有的数据结构，比如tuple,list,dict，由于原生态方法太麻烦，这里只记录boost的使用方法，假设要实现如下的Python函数功能</p> <pre class="has"><code>def Square(list_a)  {      return [x * x for x in list_a]  } </code></pre> <p>即对传入的list每个元素计算平方，返回list类型的结果，代码如下</p> <pre class="has"><code class="language-cpp">#include &lt;boost/python.hpp&gt;     boost::python::list Square(boost::python::list&amp; data)  {      boost::python::list ret;      for (int i = 0; i &lt; len(data); ++i)      {          ret.append(data[i] * data[i]);      }       return ret;  }     BOOST_PYTHON_MODULE(test5)  {      def("Square", Square);   } </code></pre> <p>编译命令如下</p> <pre class="has"><code>g++ test5.cpp -fPIC -shared -o test5.so -I/usr/include/python2.7 -I/usr/local/include/boost -L/usr/local/lib -lboost_python  </code></pre> <p>测试如下</p> <pre class="has"><code>&gt;&gt;&gt; import test5  &gt;&gt;&gt; test5.Square([1,2,3])  [1, 4, 9]  </code></pre> <p>boost实现了<code>boost::python::tuple</code>, <code>boost::python::list</code>, <code>boost::python::dict</code>这几个数据类型，使用方法基本和Python保持一致，具体方法可以查看boost头文件里的boost/python/tuple.hpp及其它对应文件</p> <p>另外比较常用的一个函数是<code>boost::python::make_tuple()</code> ，使用方法如下</p> <pre class="has"><code>boost::python::tuple(int a, int b, int c)  {       return boost::python::make_tuple(a, b, c);  }  </code></pre> </p></div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-100641.htm">重庆的宠物批发市场在哪里（重庆的宠物批发市场在哪里啊）</a></p>
                                        <p>下一个：<a href="/news/article-101247.htm">encodeURI()函数和encodeURIComponent()函数</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-100641.htm" title="重庆的宠物批发市场在哪里（重庆的宠物批发市场在哪里啊）">重庆的宠物批发市场在哪里（重庆的宠物批发市场在哪里啊）</a></li>
                        <li class="py-2"><a href="/news/article-94181.htm" title="聊城宠物集市在哪里（聊城宠物批发市场）">聊城宠物集市在哪里（聊城宠物批发市场）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-22-free-subscribe-node.htm" title="3月22日→23M/S|2025年最新免费节点V2ray ClashX订阅链接地址">3月22日→23M/S|2025年最新免费节点V2ray ClashX订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-2-free-node-subscribe-links.htm" title="4月2日→21.2M/S|2025年最新免费节点V2ray ClashX订阅链接地址">4月2日→21.2M/S|2025年最新免费节点V2ray ClashX订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-69421.htm" title="动物疫苗上市企业排名（动物疫苗上市企业排名）">动物疫苗上市企业排名（动物疫苗上市企业排名）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-17-node-share-links.htm" title="4月17日→21.1M/S|2025年最新免费节点V2ray ClashX订阅链接地址">4月17日→21.1M/S|2025年最新免费节点V2ray ClashX订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-9-free-node-subscribe.htm" title="4月9日→18.8M/S|2025年最新免费节点V2ray ClashX订阅链接地址">4月9日→18.8M/S|2025年最新免费节点V2ray ClashX订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-20-free-node-subscribe.htm" title="3月20日→20.6M/S|2025年最新免费节点V2ray ClashX订阅链接地址">3月20日→20.6M/S|2025年最新免费节点V2ray ClashX订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-94182.htm" title="动物医院英语怎么说读 动物医院英语怎么说读">动物医院英语怎么说读 动物医院英语怎么说读</a></li>
                        <li class="py-2"><a href="/news/article-65621.htm" title="北京宠爱国际动物医院电话（北京宠爱国际动物医疗）">北京宠爱国际动物医院电话（北京宠爱国际动物医疗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">68</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
        <img class="feature-bg-1 up-down-animation" src="/assets/website/img/v2rayclashx/background-shape/feature-bg-1.png" alt="bg-shape">
        <img class="feature-bg-2 left-right-animation" src="/assets/website/img/v2rayclashx/background-shape/feature-bg-2.png" alt="bg-shape">
    </section>
    <!-- /feature -->
        <!-- footer -->
    <footer class="footer-section footer" style="background-image: url(/assets/website/img/v2rayclashx/backgrounds/footer-bg.png);">
        <div class="container">
            <div class="row">
                <div class="col-lg-4 text-center text-lg-left mb-4 mb-lg-0">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">V2ray ClashX机场节点订阅官网</a> 版权所有 Powered by WordPress
                </div>
                <!-- footer social icon -->
                <nav class="col-12">
                    <ul class="list-inline text-lg-right text-center social-icon">
                        <li class="list-inline-item">
                            <a class="facebook" href="#"><i class="ti-facebook"></i></a>
                        </li>
                        <li class="list-inline-item">
                            <a class="twitter" href="#"><i class="ti-twitter-alt"></i></a>
                        </li>
                        <li class="list-inline-item">
                            <a class="linkedin" href="#"><i class="ti-linkedin"></i></a>
                        </li>
                        <li class="list-inline-item">
                            <a class="black" href="#"><i class="ti-github"></i></a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </footer>
    <!-- /footer -->
    <!-- jQuery -->
    <script src="/assets/website/js/frontend/v2rayclashx/jQuery/jquery.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="/assets/website/js/frontend/v2rayclashx/bootstrap/bootstrap.min.js"></script>
    <!-- slick slider -->
    <script src="/assets/website/js/frontend/v2rayclashx/slick/slick.min.js"></script>
    <!-- venobox -->
    <script src="/assets/website/js/frontend/v2rayclashx/Venobox/venobox.min.js"></script>
    <!-- aos -->
    <script src="/assets/website/js/frontend/v2rayclashx/aos/aos.js"></script>
    <!-- Main Script -->
    <script src="/assets/website/js/frontend/v2rayclashx/script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>